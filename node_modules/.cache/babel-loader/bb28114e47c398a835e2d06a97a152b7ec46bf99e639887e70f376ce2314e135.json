{"ast":null,"code":"import{useEffect,useRef,useCallback}from'react';import{webSocketService}from'../services/api';export const useWebSocket=()=>{const isConnected=useRef(false);const eventListeners=useRef({});useEffect(()=>{// Connect to WebSocket\nwebSocketService.connect();const handleConnect=()=>{isConnected.current=true;console.log('WebSocket connected');};const handleDisconnect=()=>{isConnected.current=false;console.log('WebSocket disconnected');};webSocketService.on('connected',handleConnect);webSocketService.on('disconnected',handleDisconnect);return()=>{webSocketService.off('connected',handleConnect);webSocketService.off('disconnected',handleDisconnect);webSocketService.disconnect();};},[]);const subscribe=useCallback((event,callback)=>{webSocketService.on(event,callback);// Keep track of listeners for cleanup\nif(!eventListeners.current[event]){eventListeners.current[event]=[];}eventListeners.current[event].push(callback);},[]);const unsubscribe=useCallback((event,callback)=>{webSocketService.off(event,callback);// Remove from tracked listeners\nif(eventListeners.current[event]){eventListeners.current[event]=eventListeners.current[event].filter(cb=>cb!==callback);}},[]);const send=useCallback(message=>{webSocketService.send(message);},[]);return{subscribe,unsubscribe,send,isConnected:isConnected.current};};","map":{"version":3,"names":["useEffect","useRef","useCallback","webSocketService","useWebSocket","isConnected","eventListeners","connect","handleConnect","current","console","log","handleDisconnect","on","off","disconnect","subscribe","event","callback","push","unsubscribe","filter","cb","send","message"],"sources":["/home/john/dev/personal/bootstrap/src/hooks/useWebSocket.ts"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\nimport { webSocketService } from '../services/api';\n\nexport const useWebSocket = () => {\n  const isConnected = useRef(false);\n  const eventListeners = useRef<{ [key: string]: ((data: any) => void)[] }>({});\n\n  useEffect(() => {\n    // Connect to WebSocket\n    webSocketService.connect();\n\n    const handleConnect = () => {\n      isConnected.current = true;\n      console.log('WebSocket connected');\n    };\n\n    const handleDisconnect = () => {\n      isConnected.current = false;\n      console.log('WebSocket disconnected');\n    };\n\n    webSocketService.on('connected', handleConnect);\n    webSocketService.on('disconnected', handleDisconnect);\n\n    return () => {\n      webSocketService.off('connected', handleConnect);\n      webSocketService.off('disconnected', handleDisconnect);\n      webSocketService.disconnect();\n    };\n  }, []);\n\n  const subscribe = useCallback((event: string, callback: (data: any) => void) => {\n    webSocketService.on(event, callback);\n    \n    // Keep track of listeners for cleanup\n    if (!eventListeners.current[event]) {\n      eventListeners.current[event] = [];\n    }\n    eventListeners.current[event].push(callback);\n  }, []);\n\n  const unsubscribe = useCallback((event: string, callback: (data: any) => void) => {\n    webSocketService.off(event, callback);\n    \n    // Remove from tracked listeners\n    if (eventListeners.current[event]) {\n      eventListeners.current[event] = eventListeners.current[event].filter(cb => cb !== callback);\n    }\n  }, []);\n\n  const send = useCallback((message: any) => {\n    webSocketService.send(message);\n  }, []);\n\n  return {\n    subscribe,\n    unsubscribe,\n    send,\n    isConnected: isConnected.current\n  };\n};"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CACtD,OAASC,gBAAgB,KAAQ,iBAAiB,CAElD,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,WAAW,CAAGJ,MAAM,CAAC,KAAK,CAAC,CACjC,KAAM,CAAAK,cAAc,CAAGL,MAAM,CAA6C,CAAC,CAAC,CAAC,CAE7ED,SAAS,CAAC,IAAM,CACd;AACAG,gBAAgB,CAACI,OAAO,CAAC,CAAC,CAE1B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1BH,WAAW,CAACI,OAAO,CAAG,IAAI,CAC1BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACpC,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7BP,WAAW,CAACI,OAAO,CAAG,KAAK,CAC3BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CACvC,CAAC,CAEDR,gBAAgB,CAACU,EAAE,CAAC,WAAW,CAAEL,aAAa,CAAC,CAC/CL,gBAAgB,CAACU,EAAE,CAAC,cAAc,CAAED,gBAAgB,CAAC,CAErD,MAAO,IAAM,CACXT,gBAAgB,CAACW,GAAG,CAAC,WAAW,CAAEN,aAAa,CAAC,CAChDL,gBAAgB,CAACW,GAAG,CAAC,cAAc,CAAEF,gBAAgB,CAAC,CACtDT,gBAAgB,CAACY,UAAU,CAAC,CAAC,CAC/B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAGd,WAAW,CAAC,CAACe,KAAa,CAAEC,QAA6B,GAAK,CAC9Ef,gBAAgB,CAACU,EAAE,CAACI,KAAK,CAAEC,QAAQ,CAAC,CAEpC;AACA,GAAI,CAACZ,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAAE,CAClCX,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAAG,EAAE,CACpC,CACAX,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAACE,IAAI,CAACD,QAAQ,CAAC,CAC9C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,WAAW,CAAGlB,WAAW,CAAC,CAACe,KAAa,CAAEC,QAA6B,GAAK,CAChFf,gBAAgB,CAACW,GAAG,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAErC;AACA,GAAIZ,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAAE,CACjCX,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAAGX,cAAc,CAACG,OAAO,CAACQ,KAAK,CAAC,CAACI,MAAM,CAACC,EAAE,EAAIA,EAAE,GAAKJ,QAAQ,CAAC,CAC7F,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,IAAI,CAAGrB,WAAW,CAAEsB,OAAY,EAAK,CACzCrB,gBAAgB,CAACoB,IAAI,CAACC,OAAO,CAAC,CAChC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLR,SAAS,CACTI,WAAW,CACXG,IAAI,CACJlB,WAAW,CAAEA,WAAW,CAACI,OAC3B,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}